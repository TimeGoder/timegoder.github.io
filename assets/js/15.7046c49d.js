(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{340:function(s,n,t){"use strict";t.r(n);var a=t(3),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"react-router的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react-router的使用"}},[s._v("#")]),s._v(" React-Router的使用")]),s._v(" "),t("p",[s._v("安装 react-router-dom")]),s._v(" "),t("blockquote",[t("p",[s._v("npm install --save react-router-dom")])]),s._v(" "),t("h2",{attrs:{id:"编写一个最简单的路由程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写一个最简单的路由程序"}},[s._v("#")]),s._v(" 编写一个最简单的路由程序")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('import React from "react";\nimport { BrowserRouter as Router, Route, Link } from "react-router-dom";\n\nfunction Index() {\n  return <h2>Index</h2>;\n}\n\nfunction List() {\n  return <h2>List</h2>;\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n        <ul>\n            <li> <Link to="/">首页</Link> </li>\n            <li><Link to="/list/">列表</Link> </li>\n        </ul>\n        <Route path="/" exact component={Index} />\n        <Route path="/list/" component={List} />\n    </Router>\n  );\n}\nexport default AppRouter;\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("p",[t("strong",[s._v("需要了解的事项")])]),s._v(" "),t("ol",[t("li",[s._v("Link 类似 HTML 中的a标签，to中地址是需要跳转的地址")]),s._v(" "),t("li",[s._v("使用的时候最外层需要用 Router 标签包裹")]),s._v(" "),t("li",[s._v("Route 是视图显示区域 path地址对应着 Link 的 to 地址 component内含有需要显示的视图组件")]),s._v(" "),t("li",[s._v("exact 精准匹配 表示路径信息要完全匹配成功，才可以实现跳转，匹配一部分是不行的。")])]),s._v(" "),t("h2",{attrs:{id:"路由传值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由传值"}},[s._v("#")]),s._v(" 路由传值")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('<Link to="/list/123">列表</Link>\n\n<Route path="/list/:id" component={List} />\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ol",[t("li",[s._v("以 : (冒号)开始的，紧跟着传递的key（键名称）名称")]),s._v(" "),t("li",[s._v("设置好规则后，就可以在Link上设置值了，现在设置传递的ID值了，这时候不用再添加id了，直接写值就可以了")])]),s._v(" "),t("h3",{attrs:{id:"在list组件上接收并显示传递值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在list组件上接收并显示传递值"}},[s._v("#")]),s._v(" 在List组件上接收并显示传递值")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("componentDidMount(){\n        console.log(this.props.match)\n }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("blockquote",[t("p",[s._v("在浏览器的控制台中可以看到打印出的对象，对象包括三个部分:")])]),s._v(" "),t("ul",[t("li",[s._v("patch:自己定义的路由规则，可以清楚的看到是可以产地id参数的。")]),s._v(" "),t("li",[s._v("url: 真实的访问路径，这上面可以清楚的看到传递过来的参数是什么。")]),s._v(" "),t("li",[s._v("params：传递过来的参数，key和value值。")])]),s._v(" "),t("h3",{attrs:{id:"动态传值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态传值"}},[s._v("#")]),s._v(" 动态传值")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            list:[\n                {uid:123,title:\"值-1''},\n                {uid:456,title:'值-2'}\n            ]\n         }\n    }\n    render() { \n        return ( \n            <ul>\n                {\n                    this.state.list.map((item,index)=>{\n                        return (\n                            <li key={index}>\n                               <Link to={'/list/'+item.uid}> {item.title}</Link> \n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        )\n    }\n}\n \nexport default Index;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("h2",{attrs:{id:"reactrouter重定向-redirect"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reactrouter重定向-redirect"}},[s._v("#")]),s._v(" ReactRouter重定向-Redirect")]),s._v(" "),t("p",[t("strong",[s._v("重定向方式有两种")])]),s._v(" "),t("blockquote",[t("p",[s._v("重定向和跳转有一个重要的区别，就是跳转式可以用浏览器的回退按钮返回上一级的，而重定向是不可以的。")])]),s._v(" "),t("ol",[t("li",[s._v("标签式重定向:就是利用"),t("Redirect",[s._v("标签来进行重定向，业务逻辑不复杂时建议使用这种。")])],1),s._v(" "),t("li",[s._v("编程式重定向:这种是利用编程的方式，一般用于业务逻辑当中，比如登录成功挑战到会员中心页面。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('// 标签重定向\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\n <Route path="/home/" component={Home} />\n <Redirect to="/home/" />\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('// 编程式重定向\n// 例子：\nconstructor(props){\n    super(props);\n    this.props.history.push("/home/");  \n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("strong",[s._v("如有Vue的基础看React还是很好入门的，基本上React三大金刚都有了，接下来就是新的React-Hooks了")])])])}),[],!1,null,null,null);n.default=e.exports}}]);